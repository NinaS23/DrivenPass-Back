generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wifi {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  networkName String
  password    String
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  users       users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model cards {
  id             Int     @id @default(autoincrement())
  userId         Int
  number_card    String  @map("number-card")
  name           String
  title          String  @unique
  CVC            String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           Type
  users          users   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model credentials {
  id        Int       @id @default(autoincrement())
  userId    Int
  username  String
  password  String
  title     String
  url       String
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  users     users     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model safeNotes {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String
  note      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  users     users    @relation(fields: [userId], references: [id], map: "notes_userId_fkey")
}

model users {
  id          Int           @id @default(autoincrement())
  email       String        @unique @db.VarChar(100)
  password    String
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  Wifi        Wifi[]
  cards       cards[]
  credentials credentials[]
  safeNotes   safeNotes[]
}

enum Type {
  debit
  credit
  debitAndCredit
}
